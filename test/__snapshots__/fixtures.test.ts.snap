// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`fixtures lint code blocks should work as expected: code-blocks.md 1`] = `
Array [
  Object {
    "column": 1,
    "endColumn": 6,
    "endLine": 3,
    "fix": Object {
      "range": Array [
        0,
        511,
      ],
      "text": "# abc

# abc

<div>Hello World!</div>

<!-- eslint-disable unicorn/prefer-spread -->

\`\`\`JavaScript
export var a = 1 == 2

export const b = [].concat(a)
\`\`\`

    export var a = 1 == 2

\`\`\`log
This is not parsable as JavaScript!
\`\`\`

<!-- eslint-mdx -->

\`\`\`jsx
export const App = () => <div>2 > 1</div>
\`\`\`

<!-- eslint-skip -->

\`\`\`TypeScript
export type Value = 1 | 2 | 3 | 4 | 5
\`\`\`

\`\`\`MarkDown
# abc

# abc
\`\`\`

<!-- mdx -->

\`\`\`mdx
import React from 'react'

<header>Header</header>

# abc

# abc
\`\`\`
",
    },
    "line": 3,
    "message": "Do not use headings with similar content (1:1)",
    "nodeType": "Program",
    "ruleId": "remark-lint-no-duplicate-headings",
    "severity": 1,
  },
  Object {
    "column": 1,
    "endColumn": 6,
    "endLine": 3,
    "line": 3,
    "message": "Don’t use multiple top level headings (1:1)",
    "nodeType": "Program",
    "ruleId": "remark-lint-no-multiple-toplevel-headings",
    "severity": 1,
  },
  Object {
    "column": 1,
    "endColumn": 4,
    "endLine": 17,
    "line": 15,
    "message": "Missing code language flag",
    "nodeType": "Program",
    "ruleId": "remark-lint-fenced-code-flag",
    "severity": 1,
  },
  Object {
    "column": 18,
    "endColumn": 30,
    "endLine": 12,
    "fix": Object {
      "range": Array [
        140,
        152,
      ],
      "text": "[a].flat()",
    },
    "line": 12,
    "message": "Prefer \`Array#flat()\` over \`[].concat()\` to flatten an array.",
    "messageId": "prefer-array-flat",
    "nodeType": "CallExpression",
    "ruleId": "unicorn/prefer-array-flat",
    "severity": 2,
  },
  Object {
    "column": 1,
    "endColumn": 6,
    "endLine": 38,
    "line": 38,
    "message": "Do not use headings with similar content (1:1)",
    "nodeType": "Program",
    "ruleId": "remark-lint-no-duplicate-headings",
    "severity": 1,
  },
  Object {
    "column": 1,
    "endColumn": 6,
    "endLine": 38,
    "line": 38,
    "message": "Don’t use multiple top level headings (1:1)",
    "nodeType": "Program",
    "ruleId": "remark-lint-no-multiple-toplevel-headings",
    "severity": 1,
  },
  Object {
    "column": 1,
    "endColumn": 6,
    "endLine": 50,
    "line": 50,
    "message": "Do not use headings with similar content (5:1)",
    "nodeType": "Program",
    "ruleId": "remark-lint-no-duplicate-headings",
    "severity": 1,
  },
  Object {
    "column": 1,
    "endColumn": 6,
    "endLine": 50,
    "line": 50,
    "message": "Don’t use multiple top level headings (5:1)",
    "nodeType": "Program",
    "ruleId": "remark-lint-no-multiple-toplevel-headings",
    "severity": 1,
  },
]
`;

exports[`fixtures should match all snapshots: 287.mdx 1`] = `Array []`;

exports[`fixtures should match all snapshots: 292.mdx 1`] = `Array []`;

exports[`fixtures should match all snapshots: 334.mdx 1`] = `Array []`;

exports[`fixtures should match all snapshots: 336.mdx 1`] = `Array []`;

exports[`fixtures should match all snapshots: 367.mdx 1`] = `Array []`;

exports[`fixtures should match all snapshots: 371.mdx 1`] = `
Array [
  Object {
    "column": 13,
    "endColumn": 14,
    "endLine": 7,
    "fix": Object {
      "range": Array [
        59,
        60,
      ],
      "text": "",
    },
    "line": 7,
    "message": "Delete \`;\`",
    "messageId": "delete",
    "nodeType": null,
    "ruleId": "prettier/prettier",
    "severity": 2,
  },
]
`;

exports[`fixtures should match all snapshots: adjacent.mdx 1`] = `
Array [
  Object {
    "column": 14,
    "endColumn": 15,
    "endLine": 1,
    "fix": Object {
      "range": Array [
        13,
        14,
      ],
      "text": "",
    },
    "line": 1,
    "message": "Delete \`·\`",
    "messageId": "delete",
    "nodeType": null,
    "ruleId": "prettier/prettier",
    "severity": 2,
  },
]
`;

exports[`fixtures should match all snapshots: basic.mdx 1`] = `
Array [
  Object {
    "column": 18,
    "endColumn": 19,
    "endLine": 3,
    "fix": Object {
      "range": Array [
        46,
        47,
      ],
      "text": " = ",
    },
    "line": 3,
    "message": "Replace \`=\` with \`·=·\`",
    "messageId": "replace",
    "nodeType": null,
    "ruleId": "prettier/prettier",
    "severity": 2,
  },
]
`;

exports[`fixtures should match all snapshots: basic.tsx 1`] = `Array []`;

exports[`fixtures should match all snapshots: blank-lines.mdx 1`] = `
Array [
  Object {
    "column": 9,
    "endColumn": 12,
    "endLine": 1,
    "fix": Object {
      "range": Array [
        8,
        11,
      ],
      "text": " Box ",
    },
    "line": 1,
    "message": "Replace \`Box\` with \`·Box·\`",
    "messageId": "replace",
    "nodeType": null,
    "ruleId": "prettier/prettier",
    "severity": 2,
  },
  Object {
    "column": 1,
    "endColumn": 16,
    "endLine": 27,
    "fix": Object {
      "range": Array [
        0,
        768,
      ],
      "text": "import {Box} from '@rebass/emotion'

# Getting Started

If you have an existing project you want to integrate MDX with, check out
the installation guides.

<Box
  p={3}
  bg=\\"lightgray\\"
  style={{
   textAlign: 'center',
   fontWeight: 'bold',
  }}
>
  [Next.js](/getting-started/next) |
  [Gatsby](/getting-started/gatsby) |
  [Create React App](/getting-started/create-react-app) |
  [React Static](/getting-started/react-static) |
  [Webpack](/getting-started/webpack) |
  [Parcel](/getting-started/parcel) |
  [Zero](/getting-started/zero)
</Box>

# Hello, world!

Here's a Twitter shortcode:

<Tweet tweetId=\\"1116723357410447360\\" />

<TextGradient>
  # Here's a text gradient shortcode!
</TextGradient>

Here's a YouTube shortcode:

<YouTube videoId=\\"4fHw4GeW3EU\\" />
",
    },
    "line": 27,
    "message": "Don’t use multiple top level headings (3:1)",
    "nodeType": "Program",
    "ruleId": "remark-lint-no-multiple-toplevel-headings",
    "severity": 1,
  },
  Object {
    "column": 1,
    "endColumn": 36,
    "endLine": 35,
    "line": 35,
    "message": "Don’t use multiple top level headings (3:1)",
    "nodeType": "Program",
    "ruleId": "remark-lint-no-multiple-toplevel-headings",
    "severity": 1,
  },
]
`;

exports[`fixtures should match all snapshots: code-blocks.md 1`] = `
Array [
  Object {
    "column": 1,
    "endColumn": 6,
    "endLine": 3,
    "fix": Object {
      "range": Array [
        0,
        511,
      ],
      "text": "# abc

# abc

<div>Hello World!</div>

<!-- eslint-disable unicorn/prefer-spread -->

\`\`\`JavaScript
export var a = 1 == 2

export const b = [].concat(a)
\`\`\`

    export var a = 1 == 2

\`\`\`log
This is not parsable as JavaScript!
\`\`\`

<!-- eslint-mdx -->

\`\`\`jsx
export const App = () => <div>2 > 1</div>
\`\`\`

<!-- eslint-skip -->

\`\`\`TypeScript
export type Value = 1 | 2 | 3 | 4 | 5
\`\`\`

\`\`\`MarkDown
# abc

# abc
\`\`\`

<!-- mdx -->

\`\`\`mdx
import React from 'react'

<header>Header</header>

# abc

# abc
\`\`\`
",
    },
    "line": 3,
    "message": "Do not use headings with similar content (1:1)",
    "nodeType": "Program",
    "ruleId": "remark-lint-no-duplicate-headings",
    "severity": 1,
  },
  Object {
    "column": 1,
    "endColumn": 6,
    "endLine": 3,
    "line": 3,
    "message": "Don’t use multiple top level headings (1:1)",
    "nodeType": "Program",
    "ruleId": "remark-lint-no-multiple-toplevel-headings",
    "severity": 1,
  },
  Object {
    "column": 1,
    "endColumn": 4,
    "endLine": 17,
    "line": 15,
    "message": "Missing code language flag",
    "nodeType": "Program",
    "ruleId": "remark-lint-fenced-code-flag",
    "severity": 1,
  },
]
`;

exports[`fixtures should match all snapshots: comments.mdx 1`] = `
Array [
  Object {
    "column": undefined,
    "fatal": true,
    "line": undefined,
    "message": "Parsing error: Unexpected character \`!\` (U+0021) before name, expected a character that can start a name, such as a letter, \`$\`, or \`_\` (note: to create a comment in MDX, use \`{/* text */}\`)",
    "ruleId": null,
    "severity": 2,
  },
]
`;

exports[`fixtures should match all snapshots: details.mdx 1`] = `
Array [
  Object {
    "column": undefined,
    "fatal": true,
    "line": undefined,
    "message": "Parsing error: Expected a closing tag for \`</summary>\` (1:1-1:10) before the end of \`paragraph\`",
    "ruleId": null,
    "severity": 2,
  },
]
`;

exports[`fixtures should match all snapshots: jsx-in-list.mdx 1`] = `Array []`;

exports[`fixtures should match all snapshots: leading-spaces.mdx 1`] = `Array []`;

exports[`fixtures should match all snapshots: markdown.md 1`] = `Array []`;

exports[`fixtures should match all snapshots: nested.md 1`] = `Array []`;

exports[`fixtures should match all snapshots: no-unescaped-entities.mdx 1`] = `Array []`;

exports[`fixtures should match all snapshots: processor.mdx 1`] = `
Array [
  Object {
    "column": 1,
    "endColumn": 6,
    "endLine": 3,
    "line": 3,
    "message": "Do not use headings with similar content (1:1)",
    "nodeType": "Program",
    "ruleId": "remark-lint-no-duplicate-headings",
    "severity": 1,
  },
  Object {
    "column": 1,
    "endColumn": 6,
    "endLine": 3,
    "line": 3,
    "message": "Don’t use multiple top level headings (1:1)",
    "nodeType": "Program",
    "ruleId": "remark-lint-no-multiple-toplevel-headings",
    "severity": 1,
  },
]
`;

exports[`fixtures should match all snapshots: remark.md 1`] = `Array []`;

exports[`fixtures should match all snapshots: remark.mdx 1`] = `
Array [
  Object {
    "column": undefined,
    "fatal": true,
    "line": undefined,
    "message": "Parsing error: Unexpected character \`!\` (U+0021) before name, expected a character that can start a name, such as a letter, \`$\`, or \`_\` (note: to create a comment in MDX, use \`{/* text */}\`)",
    "ruleId": null,
    "severity": 2,
  },
]
`;
