// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`fixtures lint code blocks should work as expected: code-blocks.md 1`] = `
Array [
  Object {
    "column": 1,
    "endColumn": 6,
    "endLine": 3,
    "fix": Object {
      "range": Array [
        0,
        511,
      ],
      "text": "# abc

# abc

<div>Hello World!</div>

<!-- eslint-disable unicorn/prefer-spread -->

\`\`\`JavaScript
export var a = 1 == 2

export const b = [].concat(a)
\`\`\`

    export var a = 1 == 2

\`\`\`log
This is not parsable as JavaScript!
\`\`\`

<!-- eslint-mdx -->

\`\`\`jsx
export const App = () => <div>2 > 1</div>
\`\`\`

<!-- eslint-skip -->

\`\`\`TypeScript
export type Value = 1 | 2 | 3 | 4 | 5
\`\`\`

\`\`\`MarkDown
# abc

# abc
\`\`\`

<!-- mdx -->

\`\`\`mdx
import React from 'react'

<header>Header</header>

# abc

# abc
\`\`\`
",
    },
    "line": 3,
    "message": "Don’t use multiple top level headings (1:1)",
    "nodeType": "Program",
    "ruleId": "remark-lint-no-multiple-toplevel-headings",
    "severity": 1,
  },
  Object {
    "column": 1,
    "endColumn": 6,
    "endLine": 3,
    "line": 3,
    "message": "Do not use headings with similar content per section (1:1)",
    "nodeType": "Program",
    "ruleId": "remark-lint-no-duplicate-headings-in-section",
    "severity": 1,
  },
  Object {
    "column": 18,
    "endColumn": 30,
    "endLine": 12,
    "fix": Object {
      "range": Array [
        140,
        152,
      ],
      "text": "[a].flat()",
    },
    "line": 12,
    "message": "Prefer \`Array#flat()\` over \`[].concat()\` to flatten an array.",
    "messageId": "prefer-array-flat",
    "nodeType": "CallExpression",
    "ruleId": "unicorn/prefer-array-flat",
    "severity": 2,
  },
  Object {
    "column": 1,
    "endColumn": 4,
    "endLine": 17,
    "line": 15,
    "message": "Missing code language flag",
    "nodeType": "Program",
    "ruleId": "remark-lint-fenced-code-flag",
    "severity": 1,
  },
  Object {
    "column": 1,
    "endColumn": 6,
    "endLine": 38,
    "line": 38,
    "message": "Don’t use multiple top level headings (1:1)",
    "nodeType": "Program",
    "ruleId": "remark-lint-no-multiple-toplevel-headings",
    "severity": 1,
  },
  Object {
    "column": 1,
    "endColumn": 6,
    "endLine": 38,
    "line": 38,
    "message": "Do not use headings with similar content per section (1:1)",
    "nodeType": "Program",
    "ruleId": "remark-lint-no-duplicate-headings-in-section",
    "severity": 1,
  },
  Object {
    "column": 1,
    "endColumn": 6,
    "endLine": 50,
    "line": 50,
    "message": "Don’t use multiple top level headings (5:1)",
    "nodeType": "Program",
    "ruleId": "remark-lint-no-multiple-toplevel-headings",
    "severity": 1,
  },
  Object {
    "column": 1,
    "endColumn": 6,
    "endLine": 50,
    "line": 50,
    "message": "Do not use headings with similar content per section (5:1)",
    "nodeType": "Program",
    "ruleId": "remark-lint-no-duplicate-headings-in-section",
    "severity": 1,
  },
]
`;

exports[`fixtures should match all snapshots: 287.mdx 1`] = `Array []`;

exports[`fixtures should match all snapshots: 292.mdx 1`] = `
Array [
  Object {
    "column": 9,
    "endColumn": 58,
    "endLine": 5,
    "fix": Object {
      "range": Array [
        64,
        113,
      ],
      "text": "
      kind=\\"docs-packages-vuetify-preset\\"
      story=\\"page\\"
    ",
    },
    "line": 5,
    "message": "Replace \`·kind=\\"docs-packages-vuetify-preset\\"·story=\\"page\\"\` with \`⏎······kind=\\"docs-packages-vuetify-preset\\"⏎······story=\\"page\\"⏎····\`",
    "messageId": "replace",
    "nodeType": null,
    "ruleId": "prettier/prettier",
    "severity": 2,
  },
]
`;

exports[`fixtures should match all snapshots: 334.mdx 1`] = `Array []`;

exports[`fixtures should match all snapshots: 336.mdx 1`] = `Array []`;

exports[`fixtures should match all snapshots: 367.mdx 1`] = `Array []`;

exports[`fixtures should match all snapshots: 371.mdx 1`] = `
Array [
  Object {
    "column": 13,
    "endColumn": 14,
    "endLine": 7,
    "fix": Object {
      "range": Array [
        59,
        60,
      ],
      "text": "",
    },
    "line": 7,
    "message": "Delete \`;\`",
    "messageId": "delete",
    "nodeType": null,
    "ruleId": "prettier/prettier",
    "severity": 2,
  },
]
`;

exports[`fixtures should match all snapshots: 380.mdx 1`] = `
Array [
  Object {
    "column": 6,
    "endColumn": 6,
    "endLine": 74,
    "line": 48,
    "message": "Expected an assignment or function call and instead saw an expression.",
    "messageId": "unusedExpression",
    "nodeType": "ExpressionStatement",
    "ruleId": "no-unused-expressions",
    "severity": 2,
  },
  Object {
    "column": 6,
    "endColumn": 6,
    "endLine": 96,
    "line": 85,
    "message": "Expected an assignment or function call and instead saw an expression.",
    "messageId": "unusedExpression",
    "nodeType": "ExpressionStatement",
    "ruleId": "no-unused-expressions",
    "severity": 2,
  },
  Object {
    "column": 28,
    "endColumn": 8,
    "endLine": 92,
    "fix": Object {
      "range": Array [
        1570,
        1866,
      ],
      "text": "
        <aui-tab-group [type]=\\"type\\">
          <aui-tab label=\\"Tab 0\\"><aui-card> Content 1 </aui-card></aui-tab>
          <aui-tab label=\\"Tab 1\\"><aui-card> Content 2 </aui-card></aui-tab>
          <aui-tab label=\\"Tab 2\\"><aui-card> Content 3 </aui-card></aui-tab>
        </aui-tab-group>
      ",
    },
    "line": 86,
    "message": "Templates should be properly indented.",
    "messageId": "template-indent",
    "nodeType": "TemplateLiteral",
    "ruleId": "unicorn/template-indent",
    "severity": 2,
  },
  Object {
    "column": 6,
    "endColumn": 6,
    "endLine": 130,
    "line": 107,
    "message": "Expected an assignment or function call and instead saw an expression.",
    "messageId": "unusedExpression",
    "nodeType": "ExpressionStatement",
    "ruleId": "no-unused-expressions",
    "severity": 2,
  },
  Object {
    "column": 28,
    "endColumn": 8,
    "endLine": 126,
    "fix": Object {
      "range": Array [
        2053,
        2797,
      ],
      "text": "
        <aui-form-item>
          <label auiFormItemLabel>尺寸</label>
          <aui-radio-group
            auiFormItemControl
            [(ngModel)]=\\"size\\"
            [plain]=\\"false\\"
          >
            <aui-radio-button value=\\"large\\">大</aui-radio-button>
            <aui-radio-button value=\\"medium\\">中</aui-radio-button>
            <aui-radio-button value=\\"small\\">小</aui-radio-button>
          </aui-radio-group>
        </aui-form-item>
        <aui-tab-group [size]=\\"size\\">
          <aui-tab label=\\"Tab 0\\"><aui-card> Content 1 </aui-card></aui-tab>
          <aui-tab label=\\"Tab 1\\"><aui-card> Content 2 </aui-card></aui-tab>
          <aui-tab label=\\"Tab 2\\"><aui-card> Content 3 </aui-card></aui-tab>
        </aui-tab-group>
      ",
    },
    "line": 108,
    "message": "Templates should be properly indented.",
    "messageId": "template-indent",
    "nodeType": "TemplateLiteral",
    "ruleId": "unicorn/template-indent",
    "severity": 2,
  },
  Object {
    "column": 6,
    "endColumn": 6,
    "endLine": 163,
    "line": 141,
    "message": "Expected an assignment or function call and instead saw an expression.",
    "messageId": "unusedExpression",
    "nodeType": "ExpressionStatement",
    "ruleId": "no-unused-expressions",
    "severity": 2,
  },
  Object {
    "column": 28,
    "endColumn": 24,
    "endLine": 159,
    "fix": Object {
      "range": Array [
        2998,
        3589,
      ],
      "text": "
        aui-tab-group>
                <ng-container *auiTabTitle>aa2</ng-container>
                <aui-tab>
                  <ng-container *auiTabLabel>
                    <aui-icon icon=\\"sun\\"></aui-icon>
                    Custom Label
                  </ng-container>
                  <aui-card> Content 1 </aui-card>
                </aui-tab>
                <aui-tab label=\\"Tab 1\\"><aui-card>Content 2</aui-card></aui-tab>
                <aui-tab>
                  <ng-container *auiTabLabel>
                    <aui-icon icon=\\"moon\\"></aui-icon>
                    Custom Label
                  </ng-container>
                  <aui-card> Content 3 </aui-card>
                </aui-tab>
              </aui-tab-group
      ",
    },
    "line": 142,
    "message": "Templates should be properly indented.",
    "messageId": "template-indent",
    "nodeType": "TemplateLiteral",
    "ruleId": "unicorn/template-indent",
    "severity": 2,
  },
  Object {
    "column": 6,
    "endColumn": 6,
    "endLine": 211,
    "line": 176,
    "message": "Expected an assignment or function call and instead saw an expression.",
    "messageId": "unusedExpression",
    "nodeType": "ExpressionStatement",
    "ruleId": "no-unused-expressions",
    "severity": 2,
  },
  Object {
    "column": 28,
    "endColumn": 8,
    "endLine": 197,
    "fix": Object {
      "range": Array [
        3825,
        4386,
      ],
      "text": "
        <aui-tab-group>
          <aui-tab
            *ngFor=\\"let tab of tabs; index as i; count as len\\"
            [closeable]=\\"len > 1\\"
            [label]=\\"'tab' + tab\\"
            (close)=\\"remove(i)\\"
          >
            <aui-card> content {{ i }} </aui-card>
          </aui-tab>
          <button
            *auiTabHeaderAddon
            aui-button=\\"primary\\"
            (click)=\\"add()\\"
            size=\\"small\\"
            [square]=\\"true\\"
          >
            <aui-icon icon=\\"plus\\"></aui-icon>
          </button>
        </aui-tab-group>
      ",
    },
    "line": 177,
    "message": "Templates should be properly indented.",
    "messageId": "template-indent",
    "nodeType": "TemplateLiteral",
    "ruleId": "unicorn/template-indent",
    "severity": 2,
  },
  Object {
    "column": 13,
    "endColumn": 16,
    "endLine": 200,
    "fix": Object {
      "range": Array [
        4442,
        4529,
      ],
      "text": "number_ = 1) {
          this.tabs = this.tabs.concat(
            Array.from({ length: number_",
    },
    "line": 200,
    "message": "The variable \`num\` should be named \`number_\`. A more descriptive name will do too.",
    "messageId": "replace",
    "nodeType": "Identifier",
    "ruleId": "unicorn/prevent-abbreviations",
    "severity": 2,
  },
  Object {
    "column": 33,
    "endColumn": 39,
    "endLine": 201,
    "line": 201,
    "message": "Prefer the spread operator over \`Array#concat(…)\`.",
    "messageId": "array-concat",
    "nodeType": "Identifier",
    "ruleId": "unicorn/prefer-spread",
    "severity": 2,
    "suggestions": Array [
      Object {
        "desc": "First argument is an \`array\`.",
        "fix": Object {
          "range": Array [
            4475,
            4637,
          ],
          "text": "[...this.tabs, ...Array.from({ length: num })
              .fill()
              .map((_, i) => this.tabs[this.tabs.length - 1] + i + 1)]",
        },
        "messageId": "argument-is-spreadable",
      },
      Object {
        "desc": "First argument is not an \`array\`.",
        "fix": Object {
          "range": Array [
            4475,
            4637,
          ],
          "text": "[...this.tabs, Array.from({ length: num })
              .fill()
              .map((_, i) => this.tabs[this.tabs.length - 1] + i + 1)]",
        },
        "messageId": "argument-is-not-spreadable",
      },
    ],
  },
  Object {
    "column": 24,
    "endColumn": 25,
    "endLine": 204,
    "fix": Object {
      "range": Array [
        4578,
        4619,
      ],
      "text": "index) => this.tabs[this.tabs.length - 1] + index",
    },
    "line": 204,
    "message": "The variable \`i\` should be named \`index\`. A more descriptive name will do too.",
    "messageId": "replace",
    "nodeType": "Identifier",
    "ruleId": "unicorn/prevent-abbreviations",
    "severity": 2,
  },
  Object {
    "column": 6,
    "endColumn": 6,
    "endLine": 242,
    "line": 222,
    "message": "Expected an assignment or function call and instead saw an expression.",
    "messageId": "unusedExpression",
    "nodeType": "ExpressionStatement",
    "ruleId": "no-unused-expressions",
    "severity": 2,
  },
  Object {
    "column": 28,
    "endColumn": 8,
    "endLine": 238,
    "fix": Object {
      "range": Array [
        4863,
        5355,
      ],
      "text": "
        <aui-tab-group>
          <aui-tab label=\\"Tab 0\\"> <aui-card> Content 1 </aui-card> </aui-tab>
          <aui-tab
            label=\\"Tab 1\\"
            [disabled]=\\"true\\"
            ><aui-card> Content 2 </aui-card></aui-tab
          >
          <aui-tab label=\\"Tab 2\\"><aui-card> Content 3 </aui-card></aui-tab>
          <aui-tab
            label=\\"Tab 3\\"
            [disabled]=\\"true\\"
            ><aui-card> Content 4 </aui-card></aui-tab
          >
        </aui-tab-group>
      ",
    },
    "line": 223,
    "message": "Templates should be properly indented.",
    "messageId": "template-indent",
    "nodeType": "TemplateLiteral",
    "ruleId": "unicorn/template-indent",
    "severity": 2,
  },
  Object {
    "column": 6,
    "endColumn": 6,
    "endLine": 290,
    "line": 255,
    "message": "Expected an assignment or function call and instead saw an expression.",
    "messageId": "unusedExpression",
    "nodeType": "ExpressionStatement",
    "ruleId": "no-unused-expressions",
    "severity": 2,
  },
  Object {
    "column": 28,
    "endColumn": 8,
    "endLine": 285,
    "fix": Object {
      "range": Array [
        5652,
        6633,
      ],
      "text": "
        <aui-form-item>
          <label auiFormItemLabel>启用</label>
          <aui-radio-group
            auiFormItemControl
            [(ngModel)]=\\"lazy\\"
            [plain]=\\"false\\"
          >
            <aui-radio-button [value]=\\"true\\">是</aui-radio-button>
            <aui-radio-button [value]=\\"false\\">否</aui-radio-button>
          </aui-radio-group>
        </aui-form-item>
        <aui-tab-group [lazy]=\\"lazy\\">
          <aui-tab label=\\"Tab 1\\">
            <tabs-lazy-test *auiTabContent
              ><aui-card> Content 1 </aui-card></tabs-lazy-test
            >
          </aui-tab>
          <aui-tab label=\\"Tab 2\\">
            <tabs-lazy-test *auiTabContent
              ><aui-card> Content 2 </aui-card></tabs-lazy-test
            >
          </aui-tab>
          <aui-tab label=\\"Tab 3\\">
            <tabs-lazy-test *auiTabContent
              ><aui-card> Content 3 </aui-card></tabs-lazy-test
            >
          </aui-tab>
        </aui-tab-group>
      ",
    },
    "line": 256,
    "message": "Templates should be properly indented.",
    "messageId": "template-indent",
    "nodeType": "TemplateLiteral",
    "ruleId": "unicorn/template-indent",
    "severity": 2,
  },
  Object {
    "column": 6,
    "endColumn": 6,
    "endLine": 339,
    "line": 301,
    "message": "Expected an assignment or function call and instead saw an expression.",
    "messageId": "unusedExpression",
    "nodeType": "ExpressionStatement",
    "ruleId": "no-unused-expressions",
    "severity": 2,
  },
  Object {
    "column": 28,
    "endColumn": 26,
    "endLine": 335,
    "fix": Object {
      "range": Array [
        6863,
        8120,
      ],
      "text": "
        <aui-form-item>
                  <label auiFormItemLabel>启用 Lazy</label>
                  <aui-radio-group
                    auiFormItemControl
                    [(ngModel)]=\\"lazy\\"
                    [plain]=\\"false\\"
                  >
                    <aui-radio-button [value]=\\"true\\">是</aui-radio-button>
                    <aui-radio-button [value]=\\"false\\">否</aui-radio-button>
                  </aui-radio-group>
                </aui-form-item>
                <aui-tab-group [lazy]=\\"lazy\\">
                  <aui-tab label=\\"Tab 1\\">
                    <tabs-active-test *auiTabContent
                      ><aui-card>Content 1</aui-card></tabs-active-test
                    >
                  </aui-tab>
                  <aui-tab label=\\"Tab 2\\">
                    <tabs-active-test *auiTabContent>
                      <aui-tab-group [lazy]=\\"true\\">
                        <aui-tab label=\\"Tab 2-1\\">
                          <tabs-active-test *auiTabContent>
                            <aui-card> Content 2-1 </aui-card>
                          </tabs-active-test>
                        </aui-tab>
                        <aui-tab label=\\"Tab 2-2\\">
                          <tabs-active-test *auiTabContent>
                            <aui-card> Content 2-2 </aui-card>
                          </tabs-active-test>
                        </aui-tab>
                      </aui-tab-group>
                    </tabs-active-test>
                  </aui-tab>
                </aui-tab-group
      ",
    },
    "line": 302,
    "message": "Templates should be properly indented.",
    "messageId": "template-indent",
    "nodeType": "TemplateLiteral",
    "ruleId": "unicorn/template-indent",
    "severity": 2,
  },
  Object {
    "column": 6,
    "endColumn": 6,
    "endLine": 360,
    "line": 350,
    "message": "Expected an assignment or function call and instead saw an expression.",
    "messageId": "unusedExpression",
    "nodeType": "ExpressionStatement",
    "ruleId": "no-unused-expressions",
    "severity": 2,
  },
  Object {
    "column": 28,
    "endColumn": 8,
    "endLine": 359,
    "fix": Object {
      "range": Array [
        8305,
        8736,
      ],
      "text": "
        <aui-tab-group size=\\"large\\">
          <ng-container *auiTabTitle>Title</ng-container>
          <aui-tab label=\\"Tab 0\\"> <aui-card> Content 1 </aui-card> </aui-tab>
          <aui-tab label=\\"Tab 1\\"><aui-card> Content 2 </aui-card></aui-tab>
          <aui-tab label=\\"Tab 2\\"><aui-card> Content 3 </aui-card></aui-tab>
          <aui-tab label=\\"Tab 3\\"><aui-card> Content 4 </aui-card></aui-tab>
        </aui-tab-group>
      ",
    },
    "line": 351,
    "message": "Templates should be properly indented.",
    "messageId": "template-indent",
    "nodeType": "TemplateLiteral",
    "ruleId": "unicorn/template-indent",
    "severity": 2,
  },
]
`;

exports[`fixtures should match all snapshots: acorn.mdx 1`] = `
Array [
  Object {
    "column": 33,
    "fatal": true,
    "line": 9,
    "message": "Parsing error: Unexpected character \`\\\\\` (U+005C) in name, expected a name character such as letters, digits, \`$\`, or \`_\`; whitespace before attributes; or the end of the tag",
    "ruleId": null,
    "severity": 2,
  },
]
`;

exports[`fixtures should match all snapshots: adjacent.mdx 1`] = `
Array [
  Object {
    "column": 14,
    "endColumn": 15,
    "endLine": 1,
    "fix": Object {
      "range": Array [
        13,
        14,
      ],
      "text": "",
    },
    "line": 1,
    "message": "Delete \`·\`",
    "messageId": "delete",
    "nodeType": null,
    "ruleId": "prettier/prettier",
    "severity": 2,
  },
]
`;

exports[`fixtures should match all snapshots: basic.mdx 1`] = `
Array [
  Object {
    "column": 18,
    "endColumn": 19,
    "endLine": 3,
    "fix": Object {
      "range": Array [
        46,
        47,
      ],
      "text": " = ",
    },
    "line": 3,
    "message": "Replace \`=\` with \`·=·\`",
    "messageId": "replace",
    "nodeType": null,
    "ruleId": "prettier/prettier",
    "severity": 2,
  },
]
`;

exports[`fixtures should match all snapshots: basic.tsx 1`] = `Array []`;

exports[`fixtures should match all snapshots: blank-lines.mdx 1`] = `
Array [
  Object {
    "column": 9,
    "endColumn": 12,
    "endLine": 1,
    "fix": Object {
      "range": Array [
        8,
        11,
      ],
      "text": " Box ",
    },
    "line": 1,
    "message": "Replace \`Box\` with \`·Box·\`",
    "messageId": "replace",
    "nodeType": null,
    "ruleId": "prettier/prettier",
    "severity": 2,
  },
  Object {
    "column": 1,
    "endColumn": 16,
    "endLine": 27,
    "fix": Object {
      "range": Array [
        0,
        768,
      ],
      "text": "import {Box} from '@rebass/emotion'

# Getting Started

If you have an existing project you want to integrate MDX with, check out
the installation guides.

<Box
  p={3}
  bg=\\"lightgray\\"
  style={{
   textAlign: 'center',
   fontWeight: 'bold',
  }}
>
  [Next.js](/getting-started/next) |
  [Gatsby](/getting-started/gatsby) |
  [Create React App](/getting-started/create-react-app) |
  [React Static](/getting-started/react-static) |
  [Webpack](/getting-started/webpack) |
  [Parcel](/getting-started/parcel) |
  [Zero](/getting-started/zero)
</Box>

# Hello, world!

Here's a Twitter shortcode:

<Tweet tweetId=\\"1116723357410447360\\" />

<TextGradient>
  # Here's a text gradient shortcode!
</TextGradient>

Here's a YouTube shortcode:

<YouTube videoId=\\"4fHw4GeW3EU\\" />
",
    },
    "line": 27,
    "message": "Don’t use multiple top level headings (3:1)",
    "nodeType": "Program",
    "ruleId": "remark-lint-no-multiple-toplevel-headings",
    "severity": 1,
  },
  Object {
    "column": 1,
    "endColumn": 36,
    "endLine": 35,
    "line": 35,
    "message": "Don’t use multiple top level headings (3:1)",
    "nodeType": "Program",
    "ruleId": "remark-lint-no-multiple-toplevel-headings",
    "severity": 1,
  },
]
`;

exports[`fixtures should match all snapshots: code-blocks.md 1`] = `
Array [
  Object {
    "column": 1,
    "endColumn": 6,
    "endLine": 3,
    "fix": Object {
      "range": Array [
        0,
        511,
      ],
      "text": "# abc

# abc

<div>Hello World!</div>

<!-- eslint-disable unicorn/prefer-spread -->

\`\`\`JavaScript
export var a = 1 == 2

export const b = [].concat(a)
\`\`\`

    export var a = 1 == 2

\`\`\`log
This is not parsable as JavaScript!
\`\`\`

<!-- eslint-mdx -->

\`\`\`jsx
export const App = () => <div>2 > 1</div>
\`\`\`

<!-- eslint-skip -->

\`\`\`TypeScript
export type Value = 1 | 2 | 3 | 4 | 5
\`\`\`

\`\`\`MarkDown
# abc

# abc
\`\`\`

<!-- mdx -->

\`\`\`mdx
import React from 'react'

<header>Header</header>

# abc

# abc
\`\`\`
",
    },
    "line": 3,
    "message": "Don’t use multiple top level headings (1:1)",
    "nodeType": "Program",
    "ruleId": "remark-lint-no-multiple-toplevel-headings",
    "severity": 1,
  },
  Object {
    "column": 1,
    "endColumn": 6,
    "endLine": 3,
    "line": 3,
    "message": "Do not use headings with similar content per section (1:1)",
    "nodeType": "Program",
    "ruleId": "remark-lint-no-duplicate-headings-in-section",
    "severity": 1,
  },
  Object {
    "column": 1,
    "endColumn": 4,
    "endLine": 17,
    "line": 15,
    "message": "Missing code language flag",
    "nodeType": "Program",
    "ruleId": "remark-lint-fenced-code-flag",
    "severity": 1,
  },
]
`;

exports[`fixtures should match all snapshots: comments.mdx 1`] = `
Array [
  Object {
    "column": 2,
    "fatal": true,
    "line": 2,
    "message": "Parsing error: Unexpected character \`!\` (U+0021) before name, expected a character that can start a name, such as a letter, \`$\`, or \`_\` (note: to create a comment in MDX, use \`{/* text */}\`)",
    "ruleId": null,
    "severity": 2,
  },
]
`;

exports[`fixtures should match all snapshots: details.mdx 1`] = `
Array [
  Object {
    "column": 1,
    "fatal": true,
    "line": 1,
    "message": "Parsing error: Expected a closing tag for \`</summary>\` (1:1-1:10) before the end of \`paragraph\`",
    "ruleId": null,
    "severity": 2,
  },
]
`;

exports[`fixtures should match all snapshots: jsx-in-list.mdx 1`] = `
Array [
  Object {
    "column": 9,
    "endColumn": 58,
    "endLine": 1,
    "fix": Object {
      "range": Array [
        8,
        57,
      ],
      "text": "
      kind=\\"docs-packages-vuetify-preset\\"
      story=\\"page\\"
    ",
    },
    "line": 1,
    "message": "Replace \`·kind=\\"docs-packages-vuetify-preset\\"·story=\\"page\\"\` with \`⏎······kind=\\"docs-packages-vuetify-preset\\"⏎······story=\\"page\\"⏎····\`",
    "messageId": "replace",
    "nodeType": null,
    "ruleId": "prettier/prettier",
    "severity": 2,
  },
  Object {
    "column": 9,
    "endColumn": 58,
    "endLine": 5,
    "fix": Object {
      "range": Array [
        143,
        192,
      ],
      "text": "
      kind=\\"docs-packages-vuetify-preset\\"
      story=\\"page\\"
    ",
    },
    "line": 5,
    "message": "Replace \`·kind=\\"docs-packages-vuetify-preset\\"·story=\\"page\\"\` with \`⏎······kind=\\"docs-packages-vuetify-preset\\"⏎······story=\\"page\\"⏎····\`",
    "messageId": "replace",
    "nodeType": null,
    "ruleId": "prettier/prettier",
    "severity": 2,
  },
  Object {
    "column": 9,
    "endColumn": 58,
    "endLine": 9,
    "fix": Object {
      "range": Array [
        278,
        327,
      ],
      "text": "
      kind=\\"docs-packages-vuetify-preset\\"
      story=\\"page\\"
    ",
    },
    "line": 9,
    "message": "Replace \`·kind=\\"docs-packages-vuetify-preset\\"·story=\\"page\\"\` with \`⏎······kind=\\"docs-packages-vuetify-preset\\"⏎······story=\\"page\\"⏎····\`",
    "messageId": "replace",
    "nodeType": null,
    "ruleId": "prettier/prettier",
    "severity": 2,
  },
  Object {
    "column": 9,
    "endColumn": 58,
    "endLine": 13,
    "fix": Object {
      "range": Array [
        413,
        462,
      ],
      "text": "
      kind=\\"docs-packages-vuetify-preset\\"
      story=\\"page\\"
    ",
    },
    "line": 13,
    "message": "Replace \`·kind=\\"docs-packages-vuetify-preset\\"·story=\\"page\\"\` with \`⏎······kind=\\"docs-packages-vuetify-preset\\"⏎······story=\\"page\\"⏎····\`",
    "messageId": "replace",
    "nodeType": null,
    "ruleId": "prettier/prettier",
    "severity": 2,
  },
  Object {
    "column": 9,
    "endColumn": 58,
    "endLine": 17,
    "fix": Object {
      "range": Array [
        548,
        597,
      ],
      "text": "
      kind=\\"docs-packages-vuetify-preset\\"
      story=\\"page\\"
    ",
    },
    "line": 17,
    "message": "Replace \`·kind=\\"docs-packages-vuetify-preset\\"·story=\\"page\\"\` with \`⏎······kind=\\"docs-packages-vuetify-preset\\"⏎······story=\\"page\\"⏎····\`",
    "messageId": "replace",
    "nodeType": null,
    "ruleId": "prettier/prettier",
    "severity": 2,
  },
  Object {
    "column": 9,
    "endColumn": 58,
    "endLine": 21,
    "fix": Object {
      "range": Array [
        683,
        732,
      ],
      "text": "
      kind=\\"docs-packages-vuetify-preset\\"
      story=\\"page\\"
    ",
    },
    "line": 21,
    "message": "Replace \`·kind=\\"docs-packages-vuetify-preset\\"·story=\\"page\\"\` with \`⏎······kind=\\"docs-packages-vuetify-preset\\"⏎······story=\\"page\\"⏎····\`",
    "messageId": "replace",
    "nodeType": null,
    "ruleId": "prettier/prettier",
    "severity": 2,
  },
]
`;

exports[`fixtures should match all snapshots: leading-spaces.mdx 1`] = `Array []`;

exports[`fixtures should match all snapshots: markdown.md 1`] = `Array []`;

exports[`fixtures should match all snapshots: nested.md 1`] = `Array []`;

exports[`fixtures should match all snapshots: no-unescaped-entities.mdx 1`] = `Array []`;

exports[`fixtures should match all snapshots: processor.mdx 1`] = `
Array [
  Object {
    "column": 1,
    "endColumn": 6,
    "endLine": 3,
    "line": 3,
    "message": "Don’t use multiple top level headings (1:1)",
    "nodeType": "Program",
    "ruleId": "remark-lint-no-multiple-toplevel-headings",
    "severity": 1,
  },
  Object {
    "column": 1,
    "endColumn": 6,
    "endLine": 3,
    "line": 3,
    "message": "Do not use headings with similar content per section (1:1)",
    "nodeType": "Program",
    "ruleId": "remark-lint-no-duplicate-headings-in-section",
    "severity": 1,
  },
]
`;

exports[`fixtures should match all snapshots: remark.md 1`] = `Array []`;

exports[`fixtures should match all snapshots: remark.mdx 1`] = `Array []`;
