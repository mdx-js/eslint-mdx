// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`fixtures should match all snapshots: adjacent.mdx 1`] = `Array []`;

exports[`fixtures should match all snapshots: basic.mdx 1`] = `Array []`;

exports[`fixtures should match all snapshots: blank-lines.mdx 1`] = `
Array [
  Object {
    "column": 1,
    "endColumn": 16,
    "endLine": 27,
    "fix": Object {
      "range": Array [
        548,
        563,
      ],
      "text": "# Hello, world!",
    },
    "line": 27,
    "message": "remark-lint:no-multiple-toplevel-headings - Donâ€™t use multiple top level headings (3:1)",
    "messageId": "remarkReport",
    "nodeType": "Program",
    "ruleId": "mdx/remark",
    "severity": 1,
  },
  Object {
    "column": 2,
    "endColumn": 7,
    "endLine": 31,
    "line": 31,
    "message": "'Tweet' is not defined.",
    "nodeType": "JSXIdentifier",
    "ruleId": "react/jsx-no-undef",
    "severity": 2,
  },
  Object {
    "column": 2,
    "endColumn": 14,
    "endLine": 33,
    "line": 33,
    "message": "'TextGradient' is not defined.",
    "nodeType": "JSXIdentifier",
    "ruleId": "react/jsx-no-undef",
    "severity": 2,
  },
  Object {
    "column": 1,
    "endColumn": 36,
    "endLine": 35,
    "fix": Object {
      "range": Array [
        651,
        686,
      ],
      "text": "# Here's a text gradient shortcode!",
    },
    "line": 35,
    "message": "remark-lint:no-multiple-toplevel-headings - Donâ€™t use multiple top level headings (3:1)",
    "messageId": "remarkReport",
    "nodeType": "Program",
    "ruleId": "mdx/remark",
    "severity": 1,
  },
  Object {
    "column": 7,
    "line": 35,
    "message": "\`'\` can be escaped with \`&apos;\`, \`&lsquo;\`, \`&#39;\`, \`&rsquo;\`.",
    "nodeType": "JSXText",
    "ruleId": "mdx/no-unescaped-entities",
    "severity": 1,
  },
  Object {
    "column": 2,
    "endColumn": 9,
    "endLine": 41,
    "line": 41,
    "message": "'YouTube' is not defined.",
    "nodeType": "JSXIdentifier",
    "ruleId": "react/jsx-no-undef",
    "severity": 2,
  },
]
`;

exports[`fixtures should match all snapshots: details.mdx 1`] = `
Array [
  Object {
    "column": 290,
    "line": 3,
    "message": "\`'\` can be escaped with \`&apos;\`, \`&lsquo;\`, \`&#39;\`, \`&rsquo;\`.",
    "nodeType": "JSXText",
    "ruleId": "mdx/no-unescaped-entities",
    "severity": 1,
  },
  Object {
    "column": 5,
    "line": 5,
    "message": "\`'\` can be escaped with \`&apos;\`, \`&lsquo;\`, \`&#39;\`, \`&rsquo;\`.",
    "nodeType": "JSXText",
    "ruleId": "mdx/no-unescaped-entities",
    "severity": 1,
  },
]
`;

exports[`fixtures should match all snapshots: leading-spaces.mdx 1`] = `Array []`;

exports[`fixtures should match all snapshots: markdown.md 1`] = `Array []`;

exports[`fixtures should match all snapshots: no-jsx-html-comments.mdx 1`] = `Array []`;

exports[`fixtures should match all snapshots: no-unescaped-entities.mdx 1`] = `
Array [
  Object {
    "column": 8,
    "line": 2,
    "message": "\`>\` can be escaped with \`&gt;\`.",
    "nodeType": "JSXText",
    "ruleId": "mdx/no-unescaped-entities",
    "severity": 1,
  },
  Object {
    "column": 13,
    "line": 5,
    "message": "\`>\` can be escaped with \`&gt;\`.",
    "nodeType": "JSXText",
    "ruleId": "mdx/no-unescaped-entities",
    "severity": 1,
  },
]
`;

exports[`fixtures should match all snapshots: parser.mdx 1`] = `
Array [
  Object {
    "column": 16,
    "fatal": true,
    "line": 3,
    "message": "Parsing error: /Users/JounQin/Workspaces/GitHub/eslint-mdx/test/fixtures/parser.mdx: Expected corresponding JSX closing tag for <header> (1:11)

[0m[31m[1m>[22m[39m[90m 1 |[39m [33m<[39m$[33m>[39m[33m<[39m[33mheader[39m[33m>[39m[33m<[39m[33m/[39m$[33m>[39m[0m
[0m [90m   |[39m            [31m[1m^[22m[39m[0m",
    "ruleId": null,
    "severity": 2,
  },
]
`;

exports[`fixtures should match all snapshots: remark.md 1`] = `Array []`;

exports[`fixtures should match all snapshots: remark.mdx 1`] = `Array []`;
